meta {
  name: Gas Usage
  type: graphql
  seq: 6
}

post {
  url: https://api.octopus.energy/v1/graphql/
  body: graphql
  auth: none
}

headers {
  Authorization: {{bearerToken}}
}

body:graphql {
  query GasMeterReadings(
    $accountNumber: String!,
    $meterId: String!,
    $eventTypes: [MeterReadingEventType],
    $readFrom: DateTime,
    $readTo: DateTime,
    $before: String,
    $after: String,
    $first: Int,
    $last: Int
  ) {
    gasMeterReadings(
      accountNumber: $accountNumber,
      meterId: $meterId,
      eventTypes: $eventTypes,
      readFrom: $readFrom,
      readTo: $readTo,
      before: $before,
      after: $after,
      first: $first,
      last: $last
    ) {
      pageInfo {
        ...PageInfoFragment
      }
      edges {
        ...GasMeterReadingConnectionTypeEdgeFragment
      }
      totalCount
      edgeCount
    }
  }
}

body:graphql:vars {
  {
    "accountNumber": "{{accountNumber}}"
  }
}

vars:pre-request {
  : 
}

script:post-response {
  // Parse the response body as JSON
  const responseData = res.getBody();
  
  // Access the nested token
  const token = res("data.obtainKrakenToken.token");
  
  // Save the token as a runtime variable
  bru.setVar("bearerToken", token);
  
}

settings {
  encodeUrl: true
}
