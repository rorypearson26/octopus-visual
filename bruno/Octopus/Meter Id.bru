meta {
  name: Meter Id
  type: graphql
  seq: 4
}

post {
  url: https://api.octopus.energy/v1/graphql/
  body: graphql
  auth: none
}

headers {
  Authorization: {{bearerToken}}
}

body:graphql {
  query GetMeterId($accountNumber: String!) {
    account(accountNumber: $accountNumber) {
      electricityAgreements {
        meterPoint {
          meters {
            id
            serialNumber
          }
        }
      }
      gasAgreements {
        meterPoint {
          meters {
            id
            serialNumber
          }
        }
      }
    }
  }
}

body:graphql:vars {
  {
    "accountNumber": "{{accountNumber}}"
  }
}

vars:pre-request {
  : 
}

script:post-response {
  // Parse the response body as JSON
  const responseData = res.getBody();
  
  // Access the nested token
  const token = res("data.obtainKrakenToken.token");
  
  // Save the token as a runtime variable
  bru.setVar("bearerToken", token);
  
}

settings {
  encodeUrl: true
}
